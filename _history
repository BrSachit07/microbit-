{"entries":[{"timestamp":1751723220913,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables><block type=\"device_forever\" x=\"149\" y=\"47\"><statement name=\"HANDLER\"><block type=\"device_print_message\"><value name=\"text\"><shadow type=\"text\"><field name=\"TEXT\">Work Bitch</field></shadow></value></block></statement"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\""],[0,"></b"]],"start1":12,"start2":12,"length1":287,"length2":103},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"basic.forever(function () {\n    basic.showString(\"Work Bitch\")\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":66,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"blocksprj\""],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":220,"start2":220,"length1":68,"length2":44}]},{"type":"added","filename":"main.py","value":"def on_forever():\n    basic.show_string(\"Work Bitch\")\nbasic.forever(on_forever)\n"}]},{"timestamp":1751723638653,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ion "],[-1,"on_forever"],[0,"() {"]],"start1":19,"start2":19,"length1":18,"length2":8},{"diffs":[[0,"show"],[-1,"Leds(`\n    . .  .  .\n    # # # # #\n    # # # # #\n    . # # # .\n    . . # . .\n    `)\n    basic.pause(100)\n    basic.showLeds(`\n    . . . . .\n    . # . # .\n    . # # # .\n    . . # . .\n    . . . . .\n    `)\n    basic.pause(100"],[1,"String(\"Work Bitch\""],[0,")\n})"]],"start1":38,"start2":38,"length1":230,"length2":27}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"py"],[1,"blocks"],[0,"prj\"\n}\n"]],"start1":267,"start2":267,"length1":17,"length2":21}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"ever():\n"],[-1,"    \n"],[0,"    basi"]],"start1":10,"start2":10,"length1":21,"length2":16},{"diffs":[[0,"how_"],[-1,"leds(\"\"\"\n    . .  .  .\n    # # # # #\n    # # # # #\n    . # # # .\n    . . # . .\n    \"\"\")\n    \n    basic.pause(100)\n\n    basic.show_leds(\"\"\"\n    . . . . .\n    . # . # .\n    . # # # .\n    . . # . .\n    . . . . .\n    \"\"\")\n    basic.pause(100)\n"],[1,"string(\"Work Bitch\")"],[0,"\nbas"]],"start1":29,"start2":29,"length1":247,"length2":28}]}]},{"timestamp":1751724237756,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0," x=\""],[-1,"0"],[1,"149"],[0,"\" y=\""],[-1,"0"],[1,"47"],[0,"\"><s"]],"start1":106,"start2":106,"length1":15,"length2":18},{"diffs":[[0,"ice_"],[-1,"show_leds\"><field name=\"LEDS\">`\n        # # . # # \n        # # # # # \n        # # # # # \n        . # # # . \n        . . # . .\n        `</field><next><block type=\"device_paus"],[1,"print_messag"],[0,"e\"><"]],"start1":164,"start2":164,"length1":181,"length2":20},{"diffs":[[0,"e\"><value name=\""],[-1,"pause"],[1,"text"],[0,"\"><shadow type=\""]],"start1":180,"start2":180,"length1":37,"length2":36},{"diffs":[[0,"e=\"t"],[-1,"imePicker\"><field name=\"ms\">100</field></shadow></value><next><block type=\"device_show_leds\"><field name=\"LEDS\">`\n        . . . . . \n        . # . # . \n        . # # # . \n        . . # . . \n        . . . . .\n        `</field><next><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">100</field></shadow></value></block></next></block></next></block></next"],[1,"ext\"><field name=\"TEXT\">Work Bitch</field></shadow></value"],[0,"></b"]],"start1":213,"start2":213,"length1":401,"length2":66}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    "],[-1,"    # # . # #\n    "],[1,". .  .  .\n"],[0,"    "]],"start1":59,"start2":59,"length1":26,"length2":18},{"diffs":[[0,"  # # # # #\n"],[-1,"    "],[0,"    # # # # "]],"start1":75,"start2":75,"length1":28,"length2":24},{"diffs":[[0,"# # # #\n    "],[-1,"   "],[-1," "],[0,". # # # .\n  "]],"start1":93,"start2":93,"length1":28,"length2":24},{"diffs":[[0,"  . # # # .\n    "],[-1,"  "],[-1,"  "],[0,". . # . .\n      "]],"start1":103,"start2":103,"length1":36,"length2":32},{"diffs":[[0,"  . . # . .\n    "],[-1," "],[-1,"   "],[0,"`)\n    basic.pau"]],"start1":117,"start2":117,"length1":36,"length2":32},{"diffs":[[0,"wLeds(`\n"],[-1,"    "],[0,"    . . "]],"start1":170,"start2":170,"length1":20,"length2":16},{"diffs":[[0,". . . .\n    "],[-1,"  "],[-1,"  "],[0,". # . # .\n  "]],"start1":184,"start2":184,"length1":28,"length2":24},{"diffs":[[0,"# .\n    "],[-1,"   "],[-1," "],[0,". # # # "]],"start1":202,"start2":202,"length1":20,"length2":16},{"diffs":[[0,"# # # .\n    "],[-1,"   "],[-1," "],[0,". . # . .\n  "]],"start1":212,"start2":212,"length1":28,"length2":24},{"diffs":[[0,". .\n    "],[-1,"  "],[-1,"  "],[0,". . . . "]],"start1":230,"start2":230,"length1":20,"length2":16},{"diffs":[[0,". . . .\n"],[-1,"    "],[0,"    `)\n "]],"start1":240,"start2":240,"length1":20,"length2":16}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[-1,"from microbit import *\nimport music\n\n# Simplified Game of Thrones melody\ngot_theme = (\n    \"G4:2 E4:2 F4:2 G4:2 C4:2 D4:2 E4:2 F4:2 \"\n    \"G4:2 D4:2 E4:2 F4:2 G4:2 B3:2 C4:2 D4:2 \"\n    \"E4:4 R:2 E4:2 F4:2 G4:2 C4:2 D4:2 E4:2\"\n)\n\n# Convert to playable object at 120 BPM\nplayable = music.string_playable(got_theme, 120)\n\n# Play once on boot\nmusic.play(playable, music.PlaybackMode.UNTIL_DONE)\n\n# Loop to play again on button A press\nwhile True:\n    if button_a.was_pressed():\n    "],[1,"def on_forever():\n    \n    basic.show_leds(\"\"\"\n    . .  .  .\n    # # # # #\n    # # # # #\n    . # # # .\n    . . # . .\n    \"\"\")\n    \n    basic.pause(100)\n\n    basic.show_leds(\"\"\"\n    . . . . .\n    . # . # .\n    . # # # .\n    . . # . .\n    . . . . .\n    \"\"\")\n"],[0,"    "],[-1,"mu"],[1,"ba"],[0,"sic.p"],[-1,"lay(playable, music.PlaybackMode.UNTIL_DONE"],[1,"ause(100)\n\nbasic.forever(on_forever"],[0,")\n"]],"start1":0,"start2":0,"length1":534,"length2":304}]}]},{"timestamp":1751724787735,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[1,"basic.forever(function on_forever() {\n    basic.showLeds(`\n        # # . # #\n        # # # # #\n        # # # # #\n        . # # # .\n        . . # . .\n        `)\n    basic.pause(100)\n    basic.showLeds(`\n        . . . . .\n        . # . # .\n        . # # # .\n        . . # . .\n        . . . . .\n        `)\n    basic.pause(100)\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":1,"length2":327}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"ort "],[-1,"random\n\nplayer_x = 2  # Start in the middle\n\nwhile True:\n    # Create falling dot\n    dot_x = random.randint(0, 4)\n    for y in range(5):\n        display.clear()\n        display.set_pixel(dot_x, y, 9)\n        display.set_pixel(player_x, 4, 5)\n        sleep(300)\n\n        # Move player with buttons\n        if button_a.is_pressed() and player_x > 0:\n            player_x -= 1\n        elif button_b.is_pressed() and player_x < 4:\n            player_x += 1\ninput."],[1,"music\n\n# Simplified Game of Thrones melody\ngot_theme = (\n    \"G4:2 E4:2 F4:2 G4:2 C4:2 D4:2 E4:2 F4:2 \"\n    \"G4:2 D4:2 E4:2 F4:2 G4:2 B3:2 C4:2 D4:2 \"\n    \"E4:4 R:2 E4:2 F4:2 G4:2 C4:2 D4:2 E4:2\"\n)\n\n# Convert to playable object at 120 BPM\nplayable = music.string_playable(got_theme, 120)\n\n# Play once on boot\nmusic.play(playable, music.PlaybackMode.UNTIL_DONE)\n\n# Loop to play again on "],[0,"button"],[-1,"_is_"],[1," A "],[0,"press"],[-1,"ed(Button.A)\n        # Check for catch\n        if y == 4:\n            if player_x == dot_x:\n                display.show(Image.HAPPY)\n            else:\n                display.show(Image.SAD)\n            sleep(1000)\n            display.clear("],[1,"\nwhile True:\n    if button_a.was_pressed():\n        music.play(playable, music.PlaybackMode.UNTIL_DONE"],[0,")\n"]],"start1":26,"start2":26,"length1":723,"length2":508}]}]},{"timestamp":1751725366012,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"device_forever\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"device_show_leds\"><field name=\"LEDS\">`\n        # # . # # \n        # # # # # \n        # # # # # \n        . # # # . \n        . . # . .\n        `</field><next><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">100</field></shadow></value><next><block type=\"device_show_leds\"><field name=\"LEDS\">`\n        . . . . . \n        . # . # . \n        . # # # . \n        . . # . . \n        . . . . .\n        `</field><next><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">100</field></shadow></value></block></next></block></next></block></next></block></statement></block><"],[0,"/xml>"]],"start1":71,"start2":71,"length1":13,"length2":733}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"input.onButtonPressed(Button.A, function on_button_pressed_a() {\n    led.toggle(2, 4)\n})\ninput.onButtonPressed(Button.B, function on_button_pressed_b() {\n    led.toggle(1, 3)\n})\nbasic.forever(function on_forever() {\n    \n})"],[0,"\n"]],"start1":0,"start2":0,"length1":224,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":247,"start2":247,"length1":52,"length2":8}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"  # "],[-1,"s"],[1,"S"],[0,"tart in "],[1,"the "],[0,"midd"]],"start1":50,"start2":50,"length1":17,"length2":21},{"diffs":[[0,"e True:\n"],[1,"    # Create falling dot\n"],[0,"    dot_"]],"start1":79,"start2":79,"length1":16,"length2":41},{"diffs":[[0,"yer "],[-1,"left"],[1,"with buttons"],[0,"\n   "]],"start1":311,"start2":311,"length1":12,"length2":20},{"diffs":[[0,"\n        if "],[-1,"input."],[0,"button_"],[1,"a."],[0,"is_pressed(B"]],"start1":327,"start2":327,"length1":37,"length2":33},{"diffs":[[0,"sed("],[-1,"Button.A"],[0,") an"]],"start1":355,"start2":355,"length1":16,"length2":8},{"diffs":[[0,"    "],[-1,"# Move player right\n        if input."],[1,"elif "],[0,"button_"],[1,"b."],[0,"is_p"]],"start1":409,"start2":409,"length1":52,"length2":22},{"diffs":[[0,"sed("],[-1,"Button.B"],[0,") an"]],"start1":434,"start2":434,"length1":16,"length2":8},{"diffs":[[0,"= 1\n"],[-1,"\n        # Check if player caught the dot"],[1,"input.button_is_pressed(Button.A)\n        # Check for catch"],[0,"\n   "]],"start1":480,"start2":480,"length1":49,"length2":67}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1751723220912,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"Microbit \",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1751725032655,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"device_forever\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"device_show_leds\"><field name=\"LEDS\">`\n        # # . # # \n        # # # # # \n        # # # # # \n        . # # # . \n        . . # . .\n        `</field><next><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">100</field></shadow></value><next><block type=\"device_show_leds\"><field name=\"LEDS\">`\n        . . . . . \n        . # . # . \n        . # # # . \n        . . # . . \n        . . . . .\n        `</field><next><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">100</field></shadow></value></block></next></block></next></block></next></block></statement></block></xml>","main.ts":"","README.md":"","main.py":"from microbit import *\nimport music\n\n# Simplified Squid Game (Pink Soldiers) Theme\nsquid_theme = (\n    \"E5:2 R:1 E5:2 R:1 G5:2 R:1 E5:2 R:1 \"\n    \"A4:2 R:1 C5:2 R:1 B4:2 R:1 G4:2 R:1 \"\n    \"E5:2 R:1 E5:2 R:1 G5:2 R:1 E5:2 R:1\"\n)\n\n# Convert to playable at 100 BPM for a slow, eerie feel\nplayable = music.string_playable(squid_theme, 100)\n\n# Play once on boot\nmusic.play(playable, music.PlaybackMode.UNTIL_DONE)\n\n# Loop to replay on button A press\nwhile True:\nif True:\n    pass\n        music.play(playable, music.PlaybackMode.UNTIL_DONE)\n","pxt.json":"{\n    \"name\": \"Microbit \",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}}],"shares":[],"lastSaveTime":1751725869828}